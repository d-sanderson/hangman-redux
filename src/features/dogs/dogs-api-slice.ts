import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'

// write async logic in thunks
// thunk is a middleware that lets you talk to a store ahead of time without knowing what store it will talk to

const DOGS_API = 'live_UNUvgJobAaI0CBPZvXRoo1uONZUUT0e8D15QfySYJjDHw0jtnTugvc2zzE9ZK7Im'

interface Breed {
  id: string
  name: string
  image: {
    url: string
  }
}

export const dogsApiSlice = createApi({
  // when we attach this to the store where are we storing it?
  reducerPath: 'dogApi',
  baseQuery: fetchBaseQuery({
    baseUrl: 'https://api.thedogapi.com/v1',
    prepareHeaders(headers) {
      headers.set('x-api-key', DOGS_API)
      return headers
    }
  }),
  endpoints: builder => {
    // endpoint definitions generated by the builder
    return {
      fetchBreeds: builder.query<Breed[], number | void>({
        // while endpoint will we hit
        query(limit = 10) {
          return `/breeds?limit=${limit}`
        }
      })
    }
  }
})

export const { useFetchBreedsQuery } = dogsApiSlice